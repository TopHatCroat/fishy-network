
rule ParticipantsCanReadEverything {
  description: "Participants can read everything"
  participant: "hr.foi.fishynet.*"
  operation: READ
  resource: "hr.foi.fishynet.*"
  action: ALLOW
}

rule ParticipantsCanMeasureTheirFish {
  description: "Participants can measure their fish"
  participant(p): "hr.foi.fishynet.*"
  operation: CREATE
  resource(a): "hr.foi.fishynet.MeasureFish"
  condition: (a.source.getIdentifier() == p.getIdentifier())
  action: ALLOW
}

rule FisherCanCatchFish {
  description: "Fisher can catch fish"
  participant(p): "hr.foi.fishynet.Fisher"
  operation: CREATE
  resource(tx): "hr.foi.fishynet.CatchFish"
  condition: (tx.fisher.getIdentifier() == p.getIdentifier())
  action: ALLOW
}

rule FisherCanCatchTheirFish {
  description: "Fisher can catch their own fish"
  participant(p): "hr.foi.fishynet.Fisher"
  operation: CREATE
  resource: "hr.foi.fishynet.Fish"  
  transaction(tx): "hr.foi.fishynet.CatchFish"
  condition: (tx.fisher.getIdentifier() == p.getIdentifier())
  action: ALLOW
}

rule FisherCanProduceTheirFish {
  description: "Fisher can create fish on their farm"
  participant(p): "hr.foi.fishynet.Fisher"
  operation: CREATE
  resource(a): "hr.foi.fishynet.ProduceFish"
  condition: (a.fish.fisher.getIdentifier() == p.getIdentifier())
  action: ALLOW
}

rule FisherCanKillTheirFish {
  description: "Fisher can kill their fish"
  participant(p): "hr.foi.fishynet.Fisher"
  operation: CREATE
  resource(a): "hr.foi.fishynet.KillFish"
  condition: (a.fisher.getIdentifier() == p.getIdentifier())
  action: ALLOW
}

rule FisherCanMeasureTheirFish {
  description: "Fisher can measure their fish"
  participant(p): "hr.foi.fishynet.Fisher"
  operation: CREATE
  resource(a): "hr.foi.fishynet.Fish"
  transaction(tx): "hr.foi.fishynet.MeasureFish"
  condition: (a.fisher.getIdentifier() == p.getIdentifier())
  action: ALLOW
}

rule RegulatorCanMeasureAllFish {
  description: "Regulators can measure every fish"
  participant: "hr.foi.fishynet.Regulator"
  operation: ALL
  resource: "hr.foi.fishynet.MeasureFish"
  action: ALLOW
}

rule RegulatorCanEvaluateAllFish {
  description: "Regulators can evaluate every fish"
  participant: "hr.foi.fishynet.Regulator"
  operation: ALL
  resource: "hr.foi.fishynet.Fish"
  transaction(tx): "hr.foi.fishynet.MeasureFish"
  condition: (true)
  action: ALLOW
}

rule BuyersCanBuyAllFish {
  description: "Business can buy every fish not their own"
  participant: "hr.foi.fishynet.Business"
  operation: ALL
  resource(a): "hr.foi.fishynet.Fish"
  transaction(tx): "hr.foi.fishynet.TradeFish"
  condition: (a.owner.getIdentifier() != a.getIdentifier())
  action: ALLOW
}

rule SystemACL {
  description:  "System ACL to permit all access"
  participant: "org.hyperledger.composer.system.Participant"
  operation: ALL
  resource: "org.hyperledger.composer.system.**"
  action: ALLOW
}

rule NetworkAdminUser {
    description: "Grant business network administrators full access to user resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "**"
    action: ALLOW
}

rule NetworkAdminSystem {
    description: "Grant business network administrators full access to system resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "org.hyperledger.composer.system.**"
    action: ALLOW
}

